<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lilang.distribute.test.dal.dao.CustomerDao" >
  <resultMap id="BaseResultMap" type="com.lilang.distribute.test.dal.model.CustomerDO" >
    <constructor >
      <idArg column="customer_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="customer_name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="reg_account" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="phone_no" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="identity_no" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="identity_type" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="login_name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="login_password" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="update_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    customer_id, customer_name, reg_account, phone_no, identity_no, identity_type, login_name, 
    login_password, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from T_CUSTOMER
    where customer_id = #{customerId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from T_CUSTOMER
    where customer_id = #{customerId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.lilang.distribute.test.dal.model.CustomerDO" >
    insert into T_CUSTOMER (customer_id, customer_name, reg_account, 
      phone_no, identity_no, identity_type, 
      login_name, login_password, create_time, 
      update_time)
    values (#{customerId,jdbcType=INTEGER}, #{customerName,jdbcType=VARCHAR}, #{regAccount,jdbcType=VARCHAR}, 
      #{phoneNo,jdbcType=VARCHAR}, #{identityNo,jdbcType=VARCHAR}, #{identityType,jdbcType=VARCHAR}, 
      #{loginName,jdbcType=VARCHAR}, #{loginPassword,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.lilang.distribute.test.dal.model.CustomerDO" >
    insert into T_CUSTOMER
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="customerId != null" >
        customer_id,
      </if>
      <if test="customerName != null" >
        customer_name,
      </if>
      <if test="regAccount != null" >
        reg_account,
      </if>
      <if test="phoneNo != null" >
        phone_no,
      </if>
      <if test="identityNo != null" >
        identity_no,
      </if>
      <if test="identityType != null" >
        identity_type,
      </if>
      <if test="loginName != null" >
        login_name,
      </if>
      <if test="loginPassword != null" >
        login_password,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="customerId != null" >
        #{customerId,jdbcType=INTEGER},
      </if>
      <if test="customerName != null" >
        #{customerName,jdbcType=VARCHAR},
      </if>
      <if test="regAccount != null" >
        #{regAccount,jdbcType=VARCHAR},
      </if>
      <if test="phoneNo != null" >
        #{phoneNo,jdbcType=VARCHAR},
      </if>
      <if test="identityNo != null" >
        #{identityNo,jdbcType=VARCHAR},
      </if>
      <if test="identityType != null" >
        #{identityType,jdbcType=VARCHAR},
      </if>
      <if test="loginName != null" >
        #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="loginPassword != null" >
        #{loginPassword,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lilang.distribute.test.dal.model.CustomerDO" >
    update T_CUSTOMER
    <set >
      <if test="customerName != null" >
        customer_name = #{customerName,jdbcType=VARCHAR},
      </if>
      <if test="regAccount != null" >
        reg_account = #{regAccount,jdbcType=VARCHAR},
      </if>
      <if test="phoneNo != null" >
        phone_no = #{phoneNo,jdbcType=VARCHAR},
      </if>
      <if test="identityNo != null" >
        identity_no = #{identityNo,jdbcType=VARCHAR},
      </if>
      <if test="identityType != null" >
        identity_type = #{identityType,jdbcType=VARCHAR},
      </if>
      <if test="loginName != null" >
        login_name = #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="loginPassword != null" >
        login_password = #{loginPassword,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where customer_id = #{customerId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lilang.distribute.test.dal.model.CustomerDO" >
    update T_CUSTOMER
    set customer_name = #{customerName,jdbcType=VARCHAR},
      reg_account = #{regAccount,jdbcType=VARCHAR},
      phone_no = #{phoneNo,jdbcType=VARCHAR},
      identity_no = #{identityNo,jdbcType=VARCHAR},
      identity_type = #{identityType,jdbcType=VARCHAR},
      login_name = #{loginName,jdbcType=VARCHAR},
      login_password = #{loginPassword,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where customer_id = #{customerId,jdbcType=INTEGER}
  </update>
</mapper>